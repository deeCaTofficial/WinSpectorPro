# scripts/compile_resources.py
import os
import subprocess
import sys
from pathlib import Path

PROJECT_ROOT = Path(__file__).parent.parent.resolve()
RESOURCES_DIR = PROJECT_ROOT / "src" / "winspector" / "resources"
QRC_FILES = [
    (RESOURCES_DIR / "assets.qrc", RESOURCES_DIR / "assets_rc.py")
]

def find_rcc_tool() -> Path:
    scripts_dir = Path(sys.executable).parent
    rcc_path = scripts_dir / "pyside6-rcc.exe"
    if not rcc_path.exists():
        raise FileNotFoundError(
            f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ 'pyside6-rcc.exe' –ø–æ –ø—É—Ç–∏: {rcc_path}\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ 'pyside6' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: pip install pyside6"
        )
    return rcc_path

def compile_resources():
    print("üöÄ –ö–æ–º–ø–∏–ª—è—Ü–∏—è —Ñ–∞–π–ª–æ–≤ —Ä–µ—Å—É—Ä—Å–æ–≤ Qt (.qrc) —Å –ø–æ–º–æ—â—å—é pyside6-rcc...")
    try:
        rcc_path = find_rcc_tool()
        print(f"   - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É—Ç–∏–ª–∏—Ç–∞: {rcc_path}")
    except FileNotFoundError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)

    for qrc_file, output_file in QRC_FILES:
        if not qrc_file.exists():
            print(f"‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫: –§–∞–π–ª —Ä–µ—Å—É—Ä—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: {qrc_file}")
            continue
        print(f"   - –ö–æ–º–ø–∏–ª—è—Ü–∏—è: {qrc_file.name} -> {output_file.name}")
        
        # --- –ì–õ–ê–í–ù–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï ---
        # –ú—ã —Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É —Å –∞–±—Å–æ–ª—é—Ç–Ω—ã–º–∏ –ø—É—Ç—è–º–∏
        command = [
            str(rcc_path),
            str(qrc_file.resolve()), # –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ QRC
            "-o",
            str(output_file.resolve()) # –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ PY
        ]
        
        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
            subprocess.run(command, check=True, shell=True, cwd=PROJECT_ROOT)
        except subprocess.CalledProcessError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏ {qrc_file.name}:")
            print(f"   –ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏: {e.returncode}")
            sys.exit(1)
            
    print("‚úÖ –ö–æ–º–ø–∏–ª—è—Ü–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

if __name__ == "__main__":
    compile_resources()