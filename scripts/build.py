# scripts/build.py
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ WinSpector Pro —Å –ø–æ–º–æ—â—å—é PyInstaller.

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–±–æ—Ä–∫–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å
–∏ —É–ø—Ä–æ—â–∞—è —Å–æ–∑–¥–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞. –û–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–∫–ª—é—á–∞–µ—Ç –≤—Å–µ
–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö, "–≤—à–∏–≤–∞–µ—Ç" –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ä—Å–∏–∏ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç
–≥–∏–±–∫–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–±–æ—Ä–∫–∏.
"""

import os
import shutil
import subprocess
import sys
from pathlib import Path

# --- –ì–õ–ê–í–ù–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–ë–û–†–ö–ò ---

# 1. –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
APP_NAME = "WinSpectorPro"
ENTRY_POINT = "src/main.py"

# –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ __init__.py, —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –µ–µ
# –≠—Ç–æ –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π –ø–æ–¥—Ö–æ–¥, —á–µ–º —Ä—É—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏ –∑–¥–µ—Å—å
try:
    with open("src/winspector/__init__.py", "r") as f:
        for line in f:
            if line.startswith("__version__"):
                # __version__ = "1.0.0" -> "1.0.0"
                APP_VERSION = line.split("=")[1].strip().strip('"').strip("'")
                break
except FileNotFoundError:
    print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ src/winspector/__init__.py –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏. –°–±–æ—Ä–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞.")
    sys.exit(1)


# 2. –ü—É—Ç–∏ (—Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
PROJECT_ROOT = Path(__file__).parent.parent.resolve()
ENTRY_POINT_PATH = PROJECT_ROOT / ENTRY_POINT
DIST_PATH = PROJECT_ROOT / "dist"
BUILD_PATH = PROJECT_ROOT / "build"
ICON_PATH = PROJECT_ROOT / "assets" / "app.ico"

# 3. –§–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤ .exe
# –§–æ—Ä–º–∞—Ç: ("–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π/–ø—É—Ç—å/–∫/—Ñ–∞–π–ª—É", "–ø—É—Ç—å/–Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è/–≤–Ω—É—Ç—Ä–∏/exe")
DATA_TO_INCLUDE = [
    ("src/winspector/data/knowledge_base.yaml", "winspector/data"),
    ("src/winspector/data/telemetry_domains.txt", "winspector/data"),
]

# 4. –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –æ–ø—Ü–∏–∏ PyInstaller
# –°–∫—Ä—ã—Ç—ã–µ –∏–º–ø–æ—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ PyInstaller –º–æ–∂–µ—Ç –Ω–µ –Ω–∞–π—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
HIDDEN_IMPORTS = [
    "pygments.styles.default", # –ü—Ä–∏–º–µ—Ä, –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –¥–ª—è rich/logging
    "google.generativeai.protos",
]

# –ú–æ–¥—É–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Å–±–æ—Ä–∫–∏
MODULES_TO_EXCLUDE = [
    "pytest",
    "PyQt5", # –ò—Å–∫–ª—é—á–∞–µ–º –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏
    "tkinter",
    "unittest",
]

# --- –ö–û–ù–ï–¶ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ---


def get_version_file_info():
    """–°–æ–∑–¥–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–µ—Ä—Å–∏–∏ –¥–ª—è Windows."""
    version_file_content = f"""
# UTF-8
#
# –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ VS_VERSION_INFO —Å–º.
# http://msdn.microsoft.com/en-us/library/ms646997.aspx

VSVersionInfo(
  ffi=FixedFileInfo(
    # filevers –∏ prodvers —è–≤–ª—è—é—Ç—Å—è 4-—Ö —á–∞—Å—Ç–Ω—ã–º–∏ –∫–æ—Ä—Ç–µ–∂–∞–º–∏: (_major, _minor, _patch, _build)
    filevers=({APP_VERSION.replace('.', ',')}, 0),
    prodvers=({APP_VERSION.replace('.', ',')}, 0),
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ FileFlags –≤ 0x3f, –µ—Å–ª–∏ —ç—Ç–æ –æ—Ç–ª–∞–¥–æ—á–Ω–∞—è —Å–±–æ—Ä–∫–∞
    mask=0x3f,
    # –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ FileFlags –≤ 0x0, –µ—Å–ª–∏ —ç—Ç–æ —Ä–µ–ª–∏–∑–Ω–∞—è —Å–±–æ—Ä–∫–∞
    flags=0x0,
    OS=0x40004,
    fileType=0x1,
    subtype=0x0,
    date=(0, 0)
  ),
  kids=[
    StringFileInfo(
      [
      StringTable(
        u'040904B0',
        [StringStruct(u'CompanyName', u'CLC corporation'),
        StringStruct(u'FileDescription', u'WinSpector Pro - AI-Powered Windows Optimizer'),
        StringStruct(u'FileVersion', u'{APP_VERSION}'),
        StringStruct(u'InternalName', u'{APP_NAME}'),
        StringStruct(u'LegalCopyright', u'¬© CLC corporation. All rights reserved.'),
        StringStruct(u'OriginalFilename', u'{APP_NAME}.exe'),
        StringStruct(u'ProductName', u'WinSpector Pro'),
        StringStruct(u'ProductVersion', u'{APP_VERSION}')])
      ]), 
    VarFileInfo([VarStruct(u'Translation', [1033, 1200])])
  ]
)
"""
    version_file_path = BUILD_PATH / "version_info.txt"
    with open(version_file_path, "w", encoding="utf-8") as f:
        f.write(version_file_content)
    print(f"üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏ {APP_VERSION} —Å–æ–∑–¥–∞–Ω–∞.")
    return version_file_path


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏."""
    print(f"üöÄ –ù–∞—á–∞–ª–æ —Å–±–æ—Ä–∫–∏ WinSpector Pro v{APP_VERSION}...")

    # 1. –û—á–∏—Å—Ç–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞
    print("üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Å–±–æ—Ä–∫–∏...")
    if DIST_PATH.exists(): shutil.rmtree(DIST_PATH)
    if BUILD_PATH.exists(): shutil.rmtree(BUILD_PATH)
    BUILD_PATH.mkdir(exist_ok=True)

    # 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–µ—Ä—Å–∏–∏
    version_file = get_version_file_info()

    # 3. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã PyInstaller
    command = [
        sys.executable,
        "-m", "PyInstaller",
        "--noconfirm",
        "--onefile",
        "--windowed",
        "--name", APP_NAME,
        f"--distpath={DIST_PATH}",
        f"--workpath={BUILD_PATH}",
        f"--version-file={version_file}",
    ]

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏
    if ICON_PATH.exists():
        command.append(f"--icon={ICON_PATH}")
    else:
        print(f"‚ö†Ô∏è –ò–∫–æ–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ –ø—É—Ç–∏: {ICON_PATH}. –°–±–æ—Ä–∫–∞ –±–µ–∑ –∏–∫–æ–Ω–∫–∏.")

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö
    for src_rel, dest_rel in DATA_TO_INCLUDE:
        src_abs = PROJECT_ROOT / src_rel
        if src_abs.exists():
            command.extend(["--add-data", f"{src_abs}{os.pathsep}{dest_rel}"])
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω: {src_abs}. –°–±–æ—Ä–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞.")
            sys.exit(1)

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
    for module in HIDDEN_IMPORTS:
        command.extend(["--hidden-import", module])
        
    # –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–Ω—É–∂–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
    for module in MODULES_TO_EXCLUDE:
        command.extend(["--exclude-module", module])

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞
    command.append(str(ENTRY_POINT_PATH))
    
    # 4. –ó–∞–ø—É—Å–∫ PyInstaller
    print("\n‚öôÔ∏è –ó–∞–ø—É—Å–∫ PyInstaller...")
    print("   " + " ".join(f'"{c}"' if " " in c else c for c in command))
    
    try:
        subprocess.run(command, check=True, text=True, capture_output=False, encoding='utf-8')
        print(f"\n‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! ({DIST_PATH / (APP_NAME + '.exe')})")
    except subprocess.CalledProcessError as e:
        print("\n‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏! PyInstaller –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π.")
        sys.exit(1)
    except FileNotFoundError:
        print("\n‚ùå –û—à–∏–±–∫–∞: PyInstaller –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ: pip install pyinstaller")
        sys.exit(1)
    
    # 5. –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
    print("\n‚ú® –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞...")
    try:
        shutil.rmtree(BUILD_PATH)
        print(f"   - –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞ '{BUILD_PATH}' —É–¥–∞–ª–µ–Ω–∞.")
    except OSError as e:
        print(f"   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É '{BUILD_PATH}': {e}")

    print("\nüèÅ –ì–æ—Ç–æ–≤–æ!")


if __name__ == "__main__":
    main()