# scripts/build.py
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ WinSpector Pro —Å –ø–æ–º–æ—â—å—é PyInstaller.

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–±–æ—Ä–∫–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å
–∏ —É–ø—Ä–æ—â–∞—è —Å–æ–∑–¥–∞–Ω–∏–µ –∏—Å–ø–æ–ª–Ω—è–µ–º–æ–≥–æ —Ñ–∞–π–ª–∞. –û–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –≤–∫–ª—é—á–∞–µ—Ç –≤—Å–µ
–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö, "–≤—à–∏–≤–∞–µ—Ç" –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ä—Å–∏–∏ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç
–≥–∏–±–∫–æ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Å–±–æ—Ä–∫–∏.
"""

import os
import shutil
import subprocess
import sys
import re  # ### –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –¥–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
from pathlib import Path

# --- –ì–õ–ê–í–ù–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –°–ë–û–†–ö–ò ---

# 1. –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
APP_NAME = "WinSpectorPro"
ENTRY_POINT = "src/main.py"

# 2. –ü—É—Ç–∏ (—Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
PROJECT_ROOT = Path(__file__).parent.parent.resolve()
ENTRY_POINT_PATH = PROJECT_ROOT / ENTRY_POINT
DIST_PATH = PROJECT_ROOT / "dist"
BUILD_PATH = PROJECT_ROOT / "build"
ICON_PATH = PROJECT_ROOT / "assets" / "app.ico"

# ### –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é
def get_project_version() -> str:
    """–ß–∏—Ç–∞–µ—Ç –≤–µ—Ä—Å–∏—é –∏–∑ __init__.py —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è."""
    init_py_path = PROJECT_ROOT / "src" / "winspector" / "__init__.py"
    try:
        with open(init_py_path, "r", encoding="utf-8") as f:
            content = f.read()
        match = re.search(r"^__version__\s*=\s*['\"]([^'\"]*)['\"]", content, re.M)
        if match:
            return match.group(1)
        raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ __version__ –≤ —Ñ–∞–π–ª–µ.")
    except FileNotFoundError:
        print(f"‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ {init_py_path} –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏.")
        sys.exit(1)
    except RuntimeError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        sys.exit(1)

APP_VERSION = get_project_version()

# 3. –§–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –≤ .exe
# –§–æ—Ä–º–∞—Ç: ("–æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π/–ø—É—Ç—å/–∫/—Ñ–∞–π–ª—É", "–ø—É—Ç—å/–Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è/–≤–Ω—É—Ç—Ä–∏/exe")
# –ò—Å–ø–æ–ª—å–∑—É–µ–º Path.as_posix() –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—É—Ç–µ–π
DATA_TO_INCLUDE = [
    (PROJECT_ROOT / "src/winspector/data/knowledge_base.yaml", "winspector/data"),
    (PROJECT_ROOT / "src/winspector/data/telemetry_domains.txt", "winspector/data"),
]

# 4. –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –æ–ø—Ü–∏–∏ PyInstaller
# –°–∫—Ä—ã—Ç—ã–µ –∏–º–ø–æ—Ä—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ PyInstaller –º–æ–∂–µ—Ç –Ω–µ –Ω–∞–π—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
HIDDEN_IMPORTS = [
    "pygments",  # –ß–∞—Å—Ç–æ –Ω—É–∂–µ–Ω –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—ã–≤–æ–¥–∞
    "google.generativeai.protos",
    "grpc._cython",  # ### –ò–ó–ú–ï–ù–ï–ù–ò–ï: –í–∞–∂–Ω–æ –¥–ª—è google-generativeai
    "qasync",
    # ### –ò–ó–ú–ï–ù–ï–ù–ò–ï: –Ø–≤–Ω–æ–µ —É–∫–∞–∑–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–ª–∞–≥–∏–Ω–æ–≤ PyQt6
    "PyQt6.sip",
    "PyQt6.Qt6",
    "PyQt6.QtGui",
    "PyQt6.QtWidgets",
    "PyQt6.QtCore",
]

# –ú–æ–¥—É–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —Å–±–æ—Ä–∫–∏
MODULES_TO_EXCLUDE = [
    "pytest",
    "PyQt5",
    "PySide6",
    "tkinter",
    "unittest",
    "pydoc",
    "pydoc_data",
]

# --- –ö–û–ù–ï–¶ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ---


def get_version_file_info():
    """–°–æ–∑–¥–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–µ—Ä—Å–∏–∏ –¥–ª—è Windows."""
    version_file_content = f"""
# UTF-8
VSVersionInfo(
  ffi=FixedFileInfo(
    filevers=({APP_VERSION.replace('.', ',')}, 0),
    prodvers=({APP_VERSION.replace('.', ',')}, 0),
    mask=0x3f,
    flags=0x0,
    OS=0x40004,
    fileType=0x1,
    subtype=0x0,
    date=(0, 0)
  ),
  kids=[
    StringFileInfo(
      [
      StringTable(
        u'040904B0',
        [StringStruct(u'CompanyName', u'CLC corporation'),
        StringStruct(u'FileDescription', u'WinSpector Pro - AI-Powered Windows Optimizer'),
        StringStruct(u'FileVersion', u'{APP_VERSION}'),
        StringStruct(u'InternalName', u'{APP_NAME}'),
        StringStruct(u'LegalCopyright', u'¬© CLC corporation. All rights reserved.'),
        StringStruct(u'OriginalFilename', u'{APP_NAME}.exe'),
        StringStruct(u'ProductName', u'WinSpector Pro'),
        StringStruct(u'ProductVersion', u'{APP_VERSION}')])
      ]), 
    VarFileInfo([VarStruct(u'Translation', [1033, 1200])])
  ]
)
"""
    version_file_path = BUILD_PATH / "version_info.txt"
    with open(version_file_path, "w", encoding="utf-8") as f:
        f.write(version_file_content)
    print(f"üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏ {APP_VERSION} —Å–æ–∑–¥–∞–Ω–∞.")
    return version_file_path


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏."""
    # ### –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞
    if not (PROJECT_ROOT / "src").exists() or not (PROJECT_ROOT / "scripts").exists():
        print("‚ùå –û—à–∏–±–∫–∞: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞.")
        sys.exit(1)
        
    print(f"üöÄ –ù–∞—á–∞–ª–æ —Å–±–æ—Ä–∫–∏ WinSpector Pro v{APP_VERSION}...")

    # 1. –û—á–∏—Å—Ç–∫–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞
    print("üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ —Å–±–æ—Ä–∫–∏...")
    if DIST_PATH.exists(): shutil.rmtree(DIST_PATH)
    if BUILD_PATH.exists(): shutil.rmtree(BUILD_PATH)
    BUILD_PATH.mkdir(exist_ok=True)

    # 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –≤–µ—Ä—Å–∏–∏
    version_file = get_version_file_info()

    # 3. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã PyInstaller
    command = [
        sys.executable,
        "-m", "PyInstaller",
        "--noconfirm",
        "--onefile",
        "--windowed", # –ò—Å–ø–æ–ª—å–∑—É–µ–º --windowed –¥–ª—è GUI-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        "--name", APP_NAME,
        f"--distpath={DIST_PATH}",
        f"--workpath={BUILD_PATH}",
        f"--version-file={version_file}",
    ]

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏
    if ICON_PATH.exists():
        command.append(f"--icon={ICON_PATH}")
    else:
        print(f"‚ö†Ô∏è –ò–∫–æ–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ –ø—É—Ç–∏: {ICON_PATH}. –°–±–æ—Ä–∫–∞ –±–µ–∑ –∏–∫–æ–Ω–∫–∏.")

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö
    for src_path, dest_dir in DATA_TO_INCLUDE:
        if src_path.exists():
            # ### –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò—Å–ø–æ–ª—å–∑—É–µ–º os-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
            command.extend(["--add-data", f"{src_path}{os.pathsep}{dest_dir}"])
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω: {src_path}. –°–±–æ—Ä–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞.")
            sys.exit(1)

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∫—Ä—ã—Ç—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
    for module in HIDDEN_IMPORTS:
        command.extend(["--hidden-import", module])
        
    # –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–Ω—É–∂–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
    for module in MODULES_TO_EXCLUDE:
        command.extend(["--exclude-module", module])

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞
    command.append(str(ENTRY_POINT_PATH))
    
    # 4. –ó–∞–ø—É—Å–∫ PyInstaller
    print("\n‚öôÔ∏è –ó–∞–ø—É—Å–∫ PyInstaller...")
    print("   " + " ".join(f'"{c}"' if " " in str(c) else str(c) for c in command))
    
    try:
        # ### –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–±–∏—Ä–∞–µ–º capture_output, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π –≤ Windows
        # –í—ã–≤–æ–¥ PyInstaller –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –∫–æ–Ω—Å–æ–ª–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.
        subprocess.run(command, check=True)
        print(f"\n‚úÖ –°–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! ({DIST_PATH / (APP_NAME + '.exe')})")
    except subprocess.CalledProcessError as e:
        # –≠—Ç–∞ –æ—à–∏–±–∫–∞ –≤—Å–µ –µ—â–µ –º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–æ–π—Ç–∏, –µ—Å–ª–∏ PyInstaller –≤–µ—Ä–Ω–µ—Ç –Ω–µ–Ω—É–ª–µ–≤–æ–π –∫–æ–¥ –≤—ã—Ö–æ–¥–∞
        print("\n‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏! PyInstaller –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π.")
        # –ü–æ—Å–∫–æ–ª—å–∫—É –º—ã –Ω–µ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–ª–∏ –≤—ã–≤–æ–¥, –æ–Ω —É–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∏–¥–µ–Ω –≤ –∫–æ–Ω—Å–æ–ª–∏ –≤—ã—à–µ.
        sys.exit(1)
    except FileNotFoundError:
        print("\n‚ùå –û—à–∏–±–∫–∞: PyInstaller –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ: pip install pyinstaller")
        sys.exit(1)
    
    # 5. –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
    print("\n‚ú® –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞...")
    try:
        shutil.rmtree(BUILD_PATH)
        print(f"   - –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞ '{BUILD_PATH}' —É–¥–∞–ª–µ–Ω–∞.")
    except OSError as e:
        print(f"   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É '{BUILD_PATH}': {e}")

    print("\nüèÅ –ì–æ—Ç–æ–≤–æ!")


if __name__ == "__main__":
    main()